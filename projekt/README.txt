==== COURSE ==== 

Process Oriented Programming (1DT049) Spring 2012

Department of Information Technology 
Uppsala university


==== GROUP ==== 

Group 3


==== PROJECT NAME ==== 

NUNTII


==== PROJECT DESCRIPTION ==== 

An IRC like client/server


==== GROUP MEMBERS ==== 

900921-1492 Hampus.Adamsson.2548@student.uu.se
860119-2936 Erik.Andersson.8953@student.uu.se
930213-0738 John.Davey.0738@student.uu.se
900321-1613 PerAlbin.Mattsson.5692@student.uu.se
920821-8041 Maria.Svensson.6227@student.uu.se


==== MAY THE SOURCE BE WITH YOU ==== 

Everything you need to compile and run the system is included in this
directory. 

However, you might want to get the most up to date version of this
directory. 
           git:
              http://github.com/hampusadamsson/osm/project


==== ERLANG VERSION ====
     
This software was developed and tested using 
     Erlang R16B01.
     Erlang/OTP 17

==== PYTHON VERSION ====
     
This software was developed and tested using 
     
     Python 3
	      	  	    	       
==== MAKE IT HAPPEN ==== 

Using the rebar or make utility you can perform the following actions:

./rebar compile ==-> Compiles the Erlang source files if necessary.
./rebar clean ==> Removes all beam files and html files generated by Edoc.
./rebar eunit -v ==> Runs all Eunit tests.

make ==> Compiles the Erlang source files if necessary. 
make archive ==> Creates a gziped tar archive of this directory. 
make clean ==> Removes all beam files and html files generated by Edoc.
make doc ==> Generates Edoc documentation in the doc/html directory.
make start ==> Starts the system.
make test ==> Runs all Eunit tests.

==== GENERATE PYTHON DOCUMENTATION ====

You can generate documentation for the client by using Pydoc.
Open a terminal in the folder with the Python source code and enter
"pydoc -w ./" to generate HTML documentation for all the modules.

If Python 2 is the standard on your system and you installed Python 3 along side
it, you should instead enter "pydoc3 -w ./"

==== TO COMPILE ====  

To compile the project, simply type make or ./rebar compile and press enter.
1- make
2- ./rebar compile

==== TO RUN AND TEST THE SYSTEM ==== 

1- ./rebar eunit -v ==> Runs all Eunit tests.
2- make test ==> Runs all Eunit tests.

===== CONFIGURE THE CLIENT =====

The client comes with a configFile in which you have a number of options to change.

reconnectMode= [auto / manual] - Set this to auto if you want the client to automaticly try to reconnect to the server if you lose connection
				 Otherwise reconnect manually with the /connect commando 

delay= [Int] - How long the client should wait between each reconnect attempt

reconnectAmount= [X] - How many times the client should try to reconnect

restoreTabs=[auto / manual] - Set this to auto if you want the client to automaticly restore the rooms you were in if a server crash would occure
			      Othwerwise rejoin the rooms manually

ipAdress= [ipAdress] - The last ipAdress you connected to. If reconnectMode is set to auto, this is the ipAdress the server tries to reconnect to

userName= [Name] - The username you want displayed

===== HELP =====


/join [room name] [private]
      Attempt to join a room, given that the room is not private you will either join the room or both create and join it if it doesn't exist. By adding "private" after the room name, and given that the room doesn't exist, the new room will require an invite to join - see "/invite" for more information.

/exit [room name] 
        Removes you from the specified room. Note that you can't exit the global room without terminating your connection.
             
/invite [name] 
        Invite the user specified by name to the room you are currently viewing. 

/info 
        Returns information regarding the room you are currently viewing.

/rename [name]
        Attempts to change your current username to the name specified. If the name is taken an underline "_" will be added until it becomes exclusive. 

/whois [name] 
       Returns the username, Ip and Port of the user specified by name.

/track [name]
       Returns the list of rooms  the user specified by name is currently a member of. 

/connect [host] [Port]
       Attempts to connect to Host:Port.

/clear 
       Clears the current chat window
